<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 메일 전송 기능을 제공해주는 JavaMailSenderImpl 클래스를 Spring Bean으로 등록 -->
	<!--  => SMTP 서비스를 제공하는 메일서버의 정보를 JavaMailSenderImpl 클래스의 플드에 전달하여 저장(Injection) -->
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl" id="javaMailSender">
		<property name="host" value="smtp.gmail.com"/><!-- 컴퓨터(메인서버) 이름 -->
		<property name="port" value="587"/>
		<property name="username" value="namguhee1143"/><!-- Gmail ID		=> 3가지가 제일 중요 --> 
		<property name="password" value="!!!ehowl1212."/><!-- Gmail Password -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- 핵심관심모듈이 등록된 클래스를 Spring Bean으로 등록 -->
	<!--  => mailSender 필드에 JavaMailSenderImpl 클래스의 Spring Bean을 의존관계를 설정 -->
	<bean class="xyz.itwill07.aop.EmailSendBean" id="emailSendBean">
		<property name="mailSender" ref="javaMailSender"/>
	</bean>
	
	<!-- 횡단관심모듈이 등록된 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.EmailSendAdvice" id="emailSendAdvice"/>
	
	<aop:config>
		<aop:pointcut expression="execution(* sendEmail(..))" id="emailSendPointCut"/>
		
		<aop:aspect ref="emailSendAdvice">
			<aop:before method="beforeMessage" pointcut-ref="emailSendPointCut"/>
			<aop:after-returning method="successMessage" pointcut-ref="emailSendPointCut" returning="email"/>		
			<aop:after-throwing method="failMessage" pointcut-ref="emailSendPointCut" throwing="exception"/>
		</aop:aspect>
	</aop:config>

</beans>
