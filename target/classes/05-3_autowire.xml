<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- StudentDAO 인터페이스를 상속받은 자식클래스를 Spring Bean으로 등록(2개중 1개만 등록) -->
	<bean class="xyz.itwill05.di.StudentJdbcDAO" id="studentJdbcDAO"/>
	
	<!-- <bean class="xyz.itwill05.di.StudentMybatisDAO" id="studentMybatisDAO"/> -->
	
	<!-- StudentService 인터페이스를 상속받은 자식클래스를 Spring Bean으로 등록 -->
	<!--  => StudentServiceImpl 클래스의 studentDAO 필드에 StudentDAO 인터페이스를 상속받은 
	자식클래스의 Spring Bean 객체가 저장되도록 설정 >> 의존성 주입(DI >> Dependency Injection) -->
	<!--  => property 엘리먼트를 이용하여 Setter 메소드를 호출해 수동으로 DI 구현  -->
	<!--  => DI를 구현 하지 않으면 StudentServiceImpl 클래스의 메소드를 호출 할 경우
			NullPointerException 발생 -->
	
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService">
						필드명에        객체삽입
		<property name="studentDAO" ref="studentDAO"/> 관계가 맺어지지않으면 Null이 반환댐
	</bean> -->
	
	<!-- autowire 속성 : no(기본), byName, byType, constructor 중 하나를 속성값으로 설정 -->
	<!-- autowire 속성 : 의존관계를 Spring Container가 자동으로 구현하기 위한 기능을 제공하는 속성 -->
	<!-- no(Default) 속성값 : 자동으로 의존관계를 설정하는 기능을 미구현 >> 기본 -->
	 
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="no">
		<property name="studentDAO" ref="studentDAO"/>
	</bean> -->
	
	 
	 <!-- autowire 속성의 byName 속성값 : 필드명과 동일한 beanName의 Spring Bean 객체를
	 이용하여 Spring Container가 자동으로 의존관계 구현 >> Setter Injection -->
	 <!-- => 필드명과 동일한 이름의 beanName이 존재하지 않을 경우 자동으로 의존관계 미구현 >> NullPointerExcepion 발생 -->
	 <!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byName"/> -->
	 
	 
	 <!-- autowire 속성의 byType 속성값 : 필드의 자료형과 같은 자료형의 Spring Bean 객체를
	 이용하여 Spring Container가 자동으로 의존관계 구현 >> Setter Injection -->
	 <!--  => 필드의 자료형이 인터페이스인 경우 자식 클래스의 Spring Bean 객체로 의존 관계가 자동 설정 -->
	 <!-- 필드의 자료형이 인터페이스인 경우 자식클래스의 Spring Bean 객체가 여러개 등록되어
	 있으면 의존관계 설정시 NoUniqueBeanDefinitionException 예외가 발생한다. -->
	 <!--  => 자식이 2개라 무슨 자식을 말하는지 모르겠어여~~ -->
	 <!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byType"/> -->
	 
	 <!-- autowire 속성의 constructor 속성값 : 필드의 자료형과 같은 자료형의 Spring Bean 객체를
	 이용하여 Spring Container가 자동으로 의존관계 구현 >> Constructor Injection -->
	 <!--  => 의존 관계를 설정하기 위한 매개변수가 선언된 생성자가 반드시 작성되어있어야한다. -->
	 <!--  => 필드의 자료형이 인터페이스인 경우 자식 클래스의 Spring Bean 객체가 여러개 등록되어
	 있으면 의존관계 설정 미구현 >> NullPointerException 발생 -->
	 <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="constructor"/>

	
</beans>
